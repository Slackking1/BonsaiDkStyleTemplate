/*
 * Bonsai - OpenBIM Blender Add-on
 * Copyright (C) 2020, 2021 Dion Moult <dion@thinkmoult.com>
 *
 * This file is part of Bonsai.
 *
 * Bonsai is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Bonsai is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY, without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * long with Bonsai.  If not, see <http://www.gnu.org/licenses/>.
 */
 /* This is the default stylesheet for Danish technical drawings. Based on BIPS standards, could be updated to latest MOLIO*/

 
 :root {
    /* VARIABLES, are added here. This means you can adjust appearence and styling fast, all the following css can 
    then be considered relative to each other. Eg. if you change t5 you change all line types, cuts etc. with a slightly thicker
    line than normal, and --green you change for all concrete insitu materials. */

    /* VARIABLES, DK STANDARD COLORS */
    --green: rgb(0, 255, 0); /* Concrete insitu */
    --cyan: rgb(0, 255, 255); /* Concrete precast */
    --green-toned: rgb(0, 200, 0); /* Concrete light */
    --brown-red: rgb(129, 64, 0); /* Masonry */
    --yellow: rgb(255, 191, 0); /* Insulation soft, The color is actually curry, but the closest one to yellow in the system. */
    --orange: rgb(255, 128, 0); /* Insulation hard */
    --gray: rgb(195, 175, 165); /* Expanded clay, eg. leca og letklinker */
    --brown-dark: rgb(129, 96, 0); /* Wood element, color is actually called curry 3 */
    --brown: rgb(153, 102, 0); /* Wood, both structural and laminated timber */
    --red: rgb(255, 0, 0); /* Steel */
    --brown-light: rgb(189, 173, 126); /* Gypsum, color is actually called curry 4 */
    --brown-black: rgb(97, 75, 62); /* Terrain */
    --yellow-toned: rgb(204, 153, 0); /* Filling eg. sand etc. */
    
    /* VARIABLES, DK STANDARD LINE THICKNESS / STROKE WIDTH */
    /* for lines we toughly divide with 2 to get proper thickness eg. 0.35/2=0.175, else the lines looks clunky and thick. */
    --t1: 0.03px; /* t1 0.06mm = 0.06/2 = 0.03 VERY THIN*/
    --t2: 0.06px; /* t2 0.12mm = 0.12/2 = 0.06 */
    --t3: 0.09px; /* t3 0.18mm = 0.18/2 = 0.09 USED for eg. cuts on secondary materials*/
    --t4: 0.125px; /* t4 0.25mm = 0.25/2 = 0.125 GENERAL LINE TYPE*/
    --t5: 0.175px; /* t5 0.35mm = 0.35/2 = 0.175 USED for eg. cuts on main materials*/
    --t6: 0.25px; /* t6 0.50mm = 0.50/2 = 0.25 */
    --t7: 0.35px; /* t7 0.70mm = 0.70/2 = 0.35 */
    --t8: 0.5px; /* t8 1.00mm = 1.00/2 = 0.5 VERY THICK*/
}

* { stroke-linecap: round; stroke-linejoin: round; }

/* FONTS */
/* Arial is set to comply with DK standards, but can be changed to any font, we make the general size for detailed drawings*/
/* font are scale wihth eg. 1.0px*1,15, giving about 2mm text for small and 2,5mm for regular */
text, tspan { /* 2.0mm */ fill: black; stroke: none; font-family: 'Arial'; font-size: 2.875px} /* THIS IS USED IN GENERAL */
path.PredefinedType-TEXTLEADERDOT { marker-end: url(#leader-marker-dot); }
text.PredefinedType-TEXTLEADER, tspan.PredefinedType-TEXTLEADER { fill: black; stroke: none; }
text.title, tspan.title { /* 7mm, should not be used, very big */ font-size: 8.05px; }
text.header, tspan.header { /* 5mm, should not be used, very big */ font-size: 5.75px; }
text.large, tspan.large { /* 3.5mm, headers etc. */ font-size: 4.025px; }
text.regular, tspan.regular { /* 2.5mm, for all general text on drawing */ font-size: 2.875px; }
text.small, tspan.small { /* 2.0mm uses the 1.8 setting in ui, for all general text and explenations on detailed drawing */ font-size: 2.3px }
text.GRID, tspan.GRID { /* 2,5mm, size of grid text */ font-size: 2.875px; }

/* DIFFERENT STUFF */
/* we don't make standard "fill: black" when cutting elements, either show the element as is, or assign hatch or the material color*/
.cut { stroke: black; stroke-linecap: 'round'; stroke-width: var(--t5); fill-rule: evenodd; }
.projection { fill: white; stroke: black; stroke-linecap: 'round'; stroke-width: var(--t3); }
.surface { stroke: none; fill: #fff; fill-rule: evenodd; }
.annotation { fill: none; stroke: black; stroke-linecap: 'round'; stroke-width: var(--t4); }
.IfcAnnotation { fill: none; stroke: black; stroke-linecap: 'round'; stroke-width: var(--t4); }
.IfcGeographicElement { fill: none; stroke: black; stroke-linecap: 'round'; stroke-width: var(--t5); }
.IfcSpace { fill: none; stroke: none; }

/* LINES */
/* -------------------- Default lines, but modified------------------------ */
.PredefinedType-LINEWORK { stroke-width: var(--t4); stroke: black }
.PredefinedType-LINEWORK.dashed { stroke-width: var(--t4); stroke-dasharray: 3, 2 }
.PredefinedType-LINEWORK.fine { stroke-width: var(--t2); stroke: #777777; }
.PredefinedType-LINEWORK.thin { stroke-width: var(--t3); }
.PredefinedType-LINEWORK.medium { stroke-width: var(--t5); }
.PredefinedType-LINEWORK.thick { stroke-width: var(--t6); }
.PredefinedType-LINEWORK.strong { stroke-width: var(--t7); }
/*Defining line thickness for different types of lines, based on root styling, make a class so it can be changed inside EPset_Annotation bonsai*/
.T1 { stroke-width: var(--t1) }
.T2 { stroke-width: var(--t2); }
.T3 { stroke-width: var(--t3); }
.T4 { stroke-width: var(--t4); }
.T5 { stroke-width: var(--t5); }
.T6 { stroke-width: var(--t6); }
.T7 { stroke-width: var(--t7); }
.T8 { stroke-width: var(--t8); }
/*We also define some colors that can be reused across different types of lines*/
/*In DK standards we can choose to represent different materials in standard colors, related material is written here for context*/
/* when we are making strokes we name .Scolor*/
.Sgreen { stroke: var(--green); } /* Concrete insitu */
.Scyan { stroke: var(--cyan); } /* Concrete precast */
.SgreenToned { stroke: var(--green-toned); } /* Concrete light */
.SbrownRed { stroke: var(--brown-red); } /* Masonry */
.Syellow { stroke: var(--yellow); } /* Insulation soft */
.Sorange { stroke: var(--orange); } /* Insulation hard */
.Sgray { stroke: var(--gray); } /* Expanded clay, eg. leca og letklinker */
.SbrownDark { stroke: var(--brown-dark); } /* Wood element*/
.Sbrown { stroke: var(--brown); } /* Wood, both structural and laminated timber */
.Sred { stroke: var(--red); } /* Steel */
.SbrownLight { stroke: var(--brown-light); } /* Gypsum */
.SbrownBlack { stroke: var(--brown-black); } /* Terrain */
.SyellowToned { stroke: var(--yellow-toned); } /* Filling eg. sand etc. */
/*Now we make the standard DK line types. In bonsai these are combined with thickness and color using */
/* EPset_Annotations, this way we can make typeProducts for the lines the class could be "Cont T4 Cred*/
.PredefinedType-LINEWORK.Cont { }
.PredefinedType-LINEWORK.DotDash1 {stroke-dasharray: 1.7,0.5,0.2,0.5; }
.PredefinedType-LINEWORK.DotDash2 {stroke-dasharray: 2.2,0.7,0.2,0.7; }
.PredefinedType-LINEWORK.DotDash3 {stroke-dasharray: 3.0,0.9,0.2,0.9; }
.PredefinedType-LINEWORK.DotDash4 {stroke-dasharray: 4.0,0.9,0.2,0.9; }
.PredefinedType-LINEWORK.Dash04 {stroke-dasharray: 0.4,0.4; }
.PredefinedType-LINEWORK.Dash10 {stroke-dasharray: 1.0,1.0; }
.PredefinedType-LINEWORK.Dash20 {stroke-dasharray: 2.0,1.0; }
.PredefinedType-LINEWORK.Dash30 {stroke-dasharray: 3.0,2.0; }
.PredefinedType-LINEWORK.Dash40 {stroke-dasharray: 4.0,3.0; }
.PredefinedType-LINEWORK.Dash80 {stroke-dasharray: 8,1; }
.PredefinedType-LINEWORK.Dash80Long {stroke-dasharray: 8,1.6; }
.PredefinedType-LINEWORK.Dash100 {stroke-dasharray: 10,10; }
.PredefinedType-LINEWORK.Dot07 {stroke-dasharray: 0.1,0.7; }
.PredefinedType-LINEWORK.Dot10 {stroke-dasharray: 0.1,1.0; }
.PredefinedType-LINEWORK.Dot15 {stroke-dasharray: 0.1,1.5; }
.PredefinedType-LINEWORK.Dot20 {stroke-dasharray: 0.1,2.0; }
.PredefinedType-LINEWORK.LongdashDash {stroke-dasharray: 13,2,1,2; }
.PredefinedType-LINEWORK.LongdashDoubledash {stroke-dasharray: 10,2,2,2,2,2; }
.PredefinedType-LINEWORK.LongdashDot { stroke-dasharray: 12.8,1.6,0.3,1.6; }
.PredefinedType-LINEWORK.LongdashDoubledot { stroke-dasharray: 12.8,1.6,0.3,1.6,0.3,1.6; }
.PredefinedType-LINEWORK.LongdashTripledot { stroke-dasharray: 12.8,1.6,0.3,1.6,0.3,1.6,0.3,1.6; }
.PredefinedType-LINEWORK.DashDashDot { stroke-dasharray: 5.2,1.6,5.2,1.6,0.3,1.6; }
.PredefinedType-LINEWORK.DashDashDoubleDot { stroke-dasharray: 5.2,1.6,5.2,1.6,0.3,1.6,0.3,1.6,0.3,1.6; }
.PredefinedType-LINEWORK.DashDashTripleDot { stroke-dasharray: 5.2,1.6,5.2,1.6,0.3,1.6,0.3,1.6,0.3,1.6,0.3,1.6; }
.PredefinedType-LINEWORK.DashDoubleDot {stroke-dasharray: 13,2,0.2,2,0.2,2; }
.PredefinedType-LINEWORK.Center {stroke-dasharray: 20,1.5,0.2,1.5; }
.PredefinedType-LINEWORK.Cut { stroke-width: var(--t3); stroke-dasharray: 20,1.5,0.2,1.5; }

/* Markers, symbols etc. */
/* ---------------------- DEFAULT TYPES, but modified ---------------------- */
.PredefinedType-BACKGROUND { stroke: black; stroke-width: var(--t4); }
.PredefinedType-GRID { marker-start: url(#grid-marker); marker-end: url(#grid-marker); stroke-dasharray: 20.0, 1.5, 1.5, 1.5; stroke-width: var(--t3); }
.PredefinedType-SECTION { stroke-width: var(--t4); stroke-dasharray: 2.0,1.0; }
.PredefinedType-SECTIONLEVEL { marker-start: url(#section-level-marker); stroke-width: var(--t4); stroke-dasharray: 2.0,1.0; }
.PredefinedType-PLANLEVEL { marker-end: url(#plan-level-marker); }
.PredefinedType-DIMENSION { marker-start: url(#dimension-marker-start); marker-end: url(#dimension-marker-end); }
.PredefinedType-ANGLE { marker-start: url(#angle-marker-start); marker-end: url(#angle-marker-end); }
.PredefinedType-RADIUS { marker-end: url(#fall-marker-end); }
.PredefinedType-FALL { marker-end: url(#radius-marker-end); }
.PredefinedType-SLOPEANGLE { marker-end: url(#radius-marker-end); }
.PredefinedType-SLOPEPERCENT { marker-end: url(#radius-marker-end); }
.PredefinedType-SLOPEFRACTION { marker-end: url(#radius-marker-end); }
.PredefinedType-DIAMETER { marker-start: url(#diameter-marker-start); marker-end: url(#diameter-marker-end); }
.PredefinedType-STAIRARROW { marker-start: url(#stair-marker-start); marker-end: url(#stair-marker-end); }
.PredefinedType-BOUNDARY { fill: none; stroke: red; stroke-width: 1; stroke-dasharray: 12, 4, 3, 4, 3, 4; }
.PredefinedType-SEALANT { fill: url(#crosshatch1); stroke-width: var(--t3); }
.PredefinedType-FILLAREA { fill: white; stroke: black; }
.PredefinedType-BREAKLINE { fill: none; stroke: black; stroke-width: var(--t3); marker-mid: url(#breakline-marker); }
.PredefinedType-TEXT { fill: black; stroke: none; }
path.PredefinedType-TEXTLEADER { marker-end: url(#leader-marker); }

/*Symbols*/
/* These are defined directly in the symbols_xx.svg file, referenced in ifc file using the id under symbols in EPset_Annotation, like before this allows for making TypeProducts. */ 

/* MATERIALS */
/* Materials are defined on the ifc object or type, and appears when an object is cut. The Name is the material used */
/* stroke width defines the edge line thicknees of the material, since materials appear when cut, this is the cut-line thickness*/
/* when materials are cut with a hatch we want black lines, and with a solid fill we want the material color */
/* ------------------------ SOME BASIC COLORS ----------------------- */
.material-blank { fill: white; stroke-width: var(--t4); }
.material-red { fill: red; stroke-width: var(--t4);}
.material-blue { fill: blue; stroke-width: var(--t4); }
.material-green { fill: green; stroke-width: var(--t4); }
.material-yellow { fill: yellow; stroke-width: var(--t4); }
.material-black { fill: black; stroke-width: var(--t4); }
/* ------------------------ FROM DEFAULT ----------------------- */
.material-diagonal1 { fill: url(#diagonal1); stroke-width: var(--t4); }
.material-diagonal2 { fill: url(#diagonal2); stroke-width: var(--t4); }
.material-diagonal3 { fill: url(#diagonal3); stroke-width: var(--t4); }
.material-crosshatch1 { fill: url(#crosshatch1); stroke-width: var(--t4); }
.material-crosshatch2 { fill: url(#crosshatch2); stroke-width: var(--t4); }
.material-crosshatch3 { fill: url(#crosshatch3); stroke-width: var(--t4); }
.material-glass { fill: url(#glass); stroke-width: var(--t4); }
.material-grass { fill: url(#grass); stroke-width: var(--t4); }
.material-liquid { fill: url(#liquid); stroke-width: var(--t4); }
.material-concrete { fill: url(#concrete); stroke-width: var(--t5); }
/* ------------------------ DK ----------------------- */
.material-steel { fill: url(#steel); stroke-width: var(--t5); }
.material-steelColor { fill: var(--red); stroke-width: var(--t5); stroke: var(--red); }
.material-masonry { fill: url(#masonry); stroke-width: var(--t5); }
.material-masonryColor { fill: var(--brown-red); stroke-width: var(--t5); stroke: var(--brown-red); }
.material-earth { fill: url(#earth); stroke-width: var(--t4); }
.material-earthColor { fill: var(--brown-black); stroke-width: var(--t4); stroke: var(--brown-black); }
.material-expandedClay { fill: url(#expandedClay); stroke-width: var(--t3); }
.material-expandedClayColor { fill: var(--gray); stroke-width: var(--t3); stroke: var(--gray); }
.material-sand { fill: url(#sand); stroke-width: var(--t4); }
.material-sandColor { fill: var(--yellow-toned); stroke-width: var(--t4); stroke: var(--yellow-toned); }
.material-concreteInsitu { fill: url(#concreteInsitu); stroke-width: var(--t5); }
.material-concreteInsituColor { fill: var(--green); stroke-width: var(--t5); stroke: var(--green); }
.material-concretePrecast { fill: url(#concretePrecast); stroke-width: var(--t5); }
.material-concretePrecastColor { fill: var(--cyan); stroke-width: var(--t5); stroke: var(--cyan); }
.material-concreteLight { fill: url(#concreteLight); stroke-width: var(--t5); }
.material-concreteLightColor { fill: var(--green-toned); stroke-width: var(--t5); stroke: var(--green-toned); }
.material-insulationSoft { fill: url(#insulationSoft); stroke-width:var(--t3); }
.material-insulationSoftColor { fill: var(--yellow); stroke-width: var(--t3); stroke: var(--yellow); }
.material-insulationRigid { fill: url(#insulationRigid); stroke-width: var(--t3); }
.material-insulationRigidColor { fill: var(--orange); stroke-width: var(--t3); stroke: var(--orange); }
.material-wood { fill: url(#wood); stroke-width: var(--t5); }
.material-woodColor { fill: var(--brown-dark); stroke-width: var(--t5); stroke: var(--brown-dark); }
.material-woodStructural { fill: url(#woodStructural); stroke-width: var(--t5); }
.material-woodStructuralColor { fill: var(--brown); stroke-width: var(--t5); stroke: var(--brown); }
.material-woodLaminiated { fill: url(#woodLaminiated); stroke-width: var(--t5); }
.material-woodLaminiatedColor { fill: var(--brown); stroke-width: var(--t5); stroke: var(--brown); }
.material-gypsum { fill: none; stroke-width: var(--t3); }
.material-gypsumColor { fill: var(--brown-light); stroke-width: var(--t3); stroke: var(--brown-light); }



.Masking { fill: white; }


/* FILL_AREA */
/* classes are define for each Fill area type, class name is added in EPset_Annotation */
/* Fill areas areas are the same as materials, eg. so the can be used to detail drawings we use big letters*/
/* ------------------------ SOME BASIC COLORS ----------------------- */
.BLANK { fill: white; stroke: black; stroke-width: var(--t4); }
.RED { fill: red; stroke: black; stroke-width: var(--t4); }
.BLUE { fill: blue; stroke: black; stroke-width: var(--t4); }
.GREEN { fill: green; stroke: black; stroke-width: var(--t4); }
.YELLOW { fill: yellow; stroke: black; stroke-width: var(--t4); }
.BLACK { fill: black; stroke: black; stroke-width: var(--t4); }
/* ------------------------ FROM DEFAULT ----------------------- */
.DIAGONAL1 { fill: url(#diagonal1); stroke-width: var(--t4); }
.DIAGONAL2 { fill: url(#diagonal2); stroke-width: var(--t4); }
.DIAGONAL3 { fill: url(#diagonal3); stroke-width: var(--t4); }
.CROSSHATCH1 { fill: url(#crosshatch1); stroke-width: var(--t4); }
.CROSSHATCH2 { fill: url(#crosshatch2); stroke-width: var(--t4); }
.CROSSHATCH3 { fill: url(#crosshatch3); stroke-width: var(--t4); }
.GLASS { fill: url(#glass); stroke-width: var(--t4); }
.GRASS { fill: url(#grass); stroke-width: var(--t4); }
.LIQUID { fill: url(#liquid); stroke-width: var(--t4); }
.CONCRETE { fill: url(#concrete); stroke-width: var(--t5); }
.PredefinedType-STUD { stroke: black; stroke-width: var(--t5); }
.STUD { stroke: black; stroke-width: var(--t5); }
/* ------------------------ DK ----------------------- */
.STEEL { fill: url(#steel); stroke-width: var(--t5); }
.STEELCOLOR { fill: var(--red); stroke-width: var(--t5); stroke: var(--red); }
.MASONRY { fill: url(#masonry); stroke-width: var(--t5); } 
.MASONRYCOLOR { fill: var(--brown-red); stroke-width: var(--t5); stroke: var(--brown-red); }
.EARTH { fill: url(#earth); stroke-width: var(--t4); }
.EARTHCOLOR { fill: var(--brown-black); stroke-width: var(--t4); stroke: var(--brown-black); }
.EXPANDEDCLAY { fill: url(#expandedClay); stroke-width: var(--t3); }
.EXPANDEDCLAYCOLOR { fill: var(--gray); stroke-width: var(--t3); stroke: var(--gray); }
.SAND { fill: url(#sand); stroke-width: var(--t4); }
.SANDCOLOR { fill: var(--yellow-toned); stroke-width: var(--t4); stroke: var(--yellow-toned); }
/* .CONCRETEINSITU { fill: url(#concreteInsitu); stroke-width: var(--t5); } */
.CONCRETEINSITU { background-color: white; fill: url(#concreteInsitu); fill-rule: nonzero; stroke-width: var(--t5); }
.CONCRETEINSITUCOLOR { fill: var(--green); stroke-width: var(--t5); stroke: var(--green); }
.CONCRETEPRECAST { fill: url(#concretePrecast); stroke-width: var(--t5); }
.CONCRETEPRECASTCOLOR { fill: var(--cyan); stroke-width: var(--t5); stroke: var(--cyan); }
.CONCRETELIGHT { fill: url(#concreteLight); stroke-width: var(--t5); }
.CONCRETELIGHTCOLOR { fill: var(--green-toned); stroke-width: var(--t5); stroke: var(--green-toned); }
.INSULATIONSOFT { fill: url(#insulationSoft); stroke-width:var(--t3); }
.INSULATIONSOFTCOLOR { fill: var(--yellow); stroke-width: var(--t3); stroke: var(--yellow); }
.INSULATIONRIGID { fill: url(#insulationRigid); stroke-width: var(--t3); }
.INSULATIONRIGIDCOLOR { fill: var(--orange); stroke-width: var(--t3); stroke: var(--orange); }
.WOOD { fill: url(#wood); stroke-width: var(--t5); }
.WOODCOLOR { fill: var(--brown-dark); stroke-width: var(--t5); stroke: var(--brown-dark); }
.WOODSTRUCTURAL { fill: url(#woodStructural); stroke-width: var(--t5); }
.WOODSTRUCTURALCOLOR { fill: var(--brown); stroke-width: var(--t5); stroke: var(--brown); }
.WOODLAMINATED { fill: url(#woodLaminiated); stroke-width: var(--t5); }
.WOODLAMINATEDCOLOR { fill: var(--brown); stroke-width: var(--t5); stroke: var(--brown); }
.GYPSUM { fill: none; stroke-width: var(--t3); }
.GYPSUMCOLOR { fill: var(--brown-light); stroke-width: var(--t3); stroke: var(--brown-light); }
